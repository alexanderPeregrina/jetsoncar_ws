<launch>
    <!-- Running Joy node -->
    <node respawn="true" pkg="joy"
        type="joy_node" name="jetson_joy" >
        <param name="dev" type="string" value="/dev/input/js0" />
        <param name="deadzone" value="0.12" />
    </node>

    <!-- Running obstacle avoidance Control Node -->
    <node pkg="jetsoncar_rl" type="obstacle_avoidance_cnn.py" name="obstacle_avoidance"/>

    <!-- Running obstacle avoidance detection node -->
    <node pkg="jetsoncar_rl" type="obstacle_detection.py" name="obstacle_detection"/>

    <!-- Rosserial Arduino -->
    <node name="serial_node" pkg="rosserial_python" type="serial_node.py">
            <param name="port" value="/dev/ttyUSB0"/>
            <param name="baud" value="57600" />
    </node>

    <!-- run sweep_node node -->
    <node name="sweep_node"          pkg="sweep_ros"  type="sweep_node" output="screen">
            <param name="serial_port"         type="string" value="/dev/ttyUSB1"/>
            <param name="serial_baudrate"     type="int"    value="115200"/>
            <param name="frame_id"            type="string" value="laser_frame"/>
    </node>
    
     <!-- run pointcloud_to_laserscan node -->
    <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">

        <remap from="cloud_in" to="pc2"/>
        <rosparam>
            target_frame: laser_frame # Leave disabled to output scan in pointcloud frame
            transform_tolerance: 0.001
            min_height: -1.0
            max_height: 1.0

            angle_min: -3.14 # -M_PI/2
            angle_max: 3.14 # M_PI/2
            angle_increment: 0.001 # M_PI/360.0
            scan_time: 0.1
            range_min: 0.0
            range_max: 40.0
            use_inf: true

            # Concurrency level, affects number of pointclouds queued for processing and number of threads used
            # 0 : Detect number of cores
            # 1 : Single threaded
            # 2->inf : Parallelism level
            concurrency_level: 1
        </rosparam>
    </node>
</launch>
    

